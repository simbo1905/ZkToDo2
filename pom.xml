<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.zkforge.zktodo2</groupId>
	<artifactId>zktodo2</artifactId>
	<packaging>war</packaging>
	<version>1.8.1</version>
	<name>zktodo2</name>
	<url>http://www.slideshare.net/simbo1905/design-patterns-in-zk-java-mvvm-as-modelviewbinder</url>
	<repositories>
		<repository>
			<id>zk repository</id>
			<url>http://mavensync.zkoss.org/maven2</url>
		</repository>
		<repository>
			<id>intalio.org</id>
			<url>http://www.intalio.org/public/maven2</url>
		</repository>
	</repositories>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<zk.version>6.0.2</zk.version>
		<zkel.version>1.0.2</zkel.version>
		<zkspring.version>3.1</zkspring.version>
		<spring.version>3.0.5.RELEASE</spring.version>
		<vcapservices.version>1.0.0.001</vcapservices.version>
		<hsqldb.version>1.8.0.7</hsqldb.version>
		<hibernate-entitymanager.version>3.6.10.Final</hibernate-entitymanager.version>
		<commons-dbcp.version>1.2.2</commons-dbcp.version>
		<geronimo-jta.version>1.1.1</geronimo-jta.version>
		<commons-lang.version>2.4</commons-lang.version>
		<bsh.version>2.0b4</bsh.version>
		<commons-fileupload.version>1.2.1</commons-fileupload.version>
		<commons-io.version>1.4</commons-io.version>
		<servlet-api.version>2.4</servlet-api.version>
		<junit.version>4.7</junit.version>
		<concurrent.version>1.3.4</concurrent.version>
		<commons-lang.version>2.5</commons-lang.version>
		<jetty.version>7.6.4.v20120524</jetty.version>
		<postgresql.version>8.4-702.jdbc3</postgresql.version>
		<commons-logging.version>1.0.4</commons-logging.version>
		<dom4j.version>1.6.1</dom4j.version>
		<jsr330.version>1</jsr330.version>
		<spring-data-jpa.version>1.0.3.RELEASE</spring-data-jpa.version>
		<slf4j.version>1.6.1</slf4j.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>${slf4j.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>${spring-data-jpa.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-api</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>${jsr330.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${servlet-api.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>${commons-logging.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${commons-fileupload.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>${commons-lang.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>concurrent</groupId>
			<artifactId>concurrent</artifactId>
			<version>${concurrent.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.zkoss.zk</groupId>
			<artifactId>zkbind</artifactId>
			<version>${zk.version}</version>
		</dependency>
		<dependency>
			<groupId>org.zkoss.common</groupId>
			<artifactId>zweb</artifactId>
			<version>${zk.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.zkoss.zk</groupId>
			<artifactId>zul</artifactId>
			<version>${zk.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.zkoss.zk</groupId>
			<artifactId>zkspring-core</artifactId>
			<version>${zkspring.version}</version>
			<scope>runtime</scope>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-api</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
				<exclusion>
					<artifactId>logback-classic</artifactId>
					<groupId>ch.qos.logback</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.zkoss.zk</groupId>
			<artifactId>zkplus</artifactId>
			<version>${zk.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate-entitymanager.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>slf4j-api</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- manage dom4j explicitly for JBossAS702 -->
		<dependency>
			<artifactId>dom4j</artifactId>
			<groupId>dom4j</groupId>
			<scope>runtime</scope>
			<version>${dom4j.version}</version>
		</dependency>
		<!-- below are optional runtime database pool and drivers -->
		<dependency>
			<groupId>hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>${hsqldb.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.version}</version>
			<classifier />
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>${commons-dbcp.version}</version>
			<scope>runtime</scope>
		</dependency>
		<!-- Test scope -->
		<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-jta_1.0.1B_spec</artifactId>
			<version>${geronimo-jta.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<finalName>zktodo2</finalName>
		<plugins>
			<!-- run jetty from eclipse or commandline with jmx enable for jconsole or StopJettyJmx.jar clean shutdown -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${jetty.version}</version>
				<configuration>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<jettyConfig>src/etc/jetty-jmx.xml</jettyConfig>
				</configuration>
			</plugin>
			<!-- we wish to run the project war with a jetty-runner which is jmx enabled so copy the required jars to the build output folder -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.3</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.mortbay.jetty</groupId>
									<artifactId>jetty-runner</artifactId>
									<version>${jetty.version}</version>
									<destFileName>jetty-runner.jar</destFileName>
								</artifactItem>
								<artifactItem>
									<groupId>org.eclipse.jetty</groupId>
									<artifactId>jetty-jmx</artifactId>
									<version>${jetty.version}</version>
									<destFileName>jetty-jmx.jar</destFileName>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- jetty-runner is not jmx enabled by default so repackage the jar with the required dependency -->
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<configuration>
							<tasks>
								<jar destfile="${project.build.directory}/jetty-runner-jmx.jar">
									<zipfileset src="${project.build.directory}/dependency/jetty-jmx.jar" />
									<zipfileset src="${project.build.directory}/dependency/jetty-runner.jar" />
									<manifest>
										<attribute name="Main-Class" value="org.mortbay.jetty.runner.Runner" />
									</manifest>
								</jar>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.1</version>
				<dependencies>
					<dependency>
						<groupId>org.kohsuke</groupId>
						<artifactId>doxia-module-markdown</artifactId>
						<version>1.0</version>
					</dependency>
				</dependencies>
				<configuration>
					<inputEncoding>UTF-8</inputEncoding>
					<outputEncoding>UTF-8</outputEncoding>
					<generateReports>false</generateReports>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>cloudfoundry</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.1.1</version>
						<configuration>
							<webResources>
								<resource>
									<directory>${basedir}/cloudfoundry</directory>
									<targetPath>WEB-INF/classes</targetPath>
								</resource>
							</webResources>
						</configuration>
					</plugin>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<phase>package</phase>
								<configuration>
									<tasks>
										<jar destfile="${project.build.directory}/jetty-runner-jmx.jar">
											<zipfileset src="${project.build.directory}/dependency/jetty-jmx.jar" />
											<zipfileset src="${project.build.directory}/dependency/jetty-runner.jar" />
											<manifest>
												<attribute name="Main-Class" value="org.mortbay.jetty.runner.Runner" />
											</manifest>
										</jar>
										<zip destfile="${basedir}/zktodo2-cf.zip"
												basedir="${project.build.directory}"
												includes="jetty-runner-jmx.jar,zktodo2.war">
										</zip>
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
							<execution>
								<id>clean</id>
								<configuration>
									<task>
										<echo>Cleaning cloudfoundry zip in the root folder</echo>
									</task>
									<tasks>
										<delete file="${basedir}/zktodo2-cf.zip" />
									</tasks>
								</configuration>
								<phase>clean</phase>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<!-- cloudfoundry dependency. found in intalio.org repo -->
				<dependency>
					<groupId>org.intalio.cloudfoundry</groupId>
					<artifactId>vcapservices</artifactId>
					<version>${vcapservices.version}</version>
					<scope>compile</scope>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
</project>
